import time
from tkinter import *
import os

print("Seja bem vindo!")
time.sleep(0.3)
print("O nosso jogo consiste na história de um estagiário no setor de analise de sistema")
time.sleep(0.3)
print("Vamos começar!")
time.sleep(0.2)
x = input("Digite o nome para o estagiário(a): ")
time.sleep(0.3)
print("Prazer", x,)
time.sleep(0.3)
print("Seja bem vindo(a) a Python ltda.")
time.sleep(0.3)

pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("empresa")
app.geometry("299x299")

imgd1 = PhotoImage(file=pastaapp + "\\empresa.gif")
l_est = Label(app, image=imgd1)
l_est.place(x=10, y=10)

app.after(5000,lambda:app.destroy())
app.mainloop()

print("Me diga uma coisa, você conhece a linguagem python?")

resposta1 = input("sim ou não: ")
if resposta1 == "sim":
    pastaapp = os.path.dirname(__file__)

    app = Tk()
    app.title("estagiário")
    app.geometry("276x183")

    imgd = PhotoImage(file=pastaapp + "\\estagiário.gif")
    l_est = Label(app, image=imgd)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()

    print("Então vamos lá")
else:
    print("Desculpa, você não está qualificado(a) para esta vaga")

    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("demetido")
    app.geometry("299x247")

    imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
    l_est = Label(app, image=imgd2)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()

    exit()
time.sleep(0.3)
print(x, "se depara com um programa de contabilidade de dinheiro, porém não está conseguindo por os números após a virgula")
pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("erro1")
app.geometry("449x247")

imgd4 = PhotoImage(file=pastaapp + "\\erro1.gif")
l_est = Label(app, image=imgd4)
l_est.place(x=10, y=10)
app.after(5000,lambda:app.destroy())
app.mainloop()

print("Aonde que está o erro?")
print("a) Identação")
time.sleep(0.3)
print("b) Casting")
time.sleep(0.3)
print("c) No número")
time.sleep(0.3)
resposta2 = input("Qual opção: ")
if resposta2 == "b":
    print("Parábens")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("pbs")
    app.geometry("380x247")

    imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
    l_est = Label(app, image=imgd3)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)
else:
    print("Está demitido(a)!")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("demetido")
    app.geometry("299x247")

    imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
    l_est = Label(app, image=imgd2)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.5)
    exit()

print("Para que esse problema seja resolvido, como devemos alterar o casting?")
pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("cast")
app.geometry("292x158")

imgd5 = PhotoImage(file=pastaapp + "\\cast.gif")
l_est = Label(app, image=imgd5)
l_est.place(x=10, y=10)
app.after(5000,lambda:app.destroy())
app.mainloop()
time.sleep(0.3)
print("a) float para o int")
time.sleep(0.3)
print("b) int para o str")
time.sleep(0.3)
print("c) int para float")
time.sleep(0.3)
resposta3 = input("Qual opção: ")
if resposta3 == "c":
    print("Parabéns, você ganhou pontos com o seu chefe.")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("pbs")
    app.geometry("380x247")

    imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
    l_est = Label(app, image=imgd3)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)
else:
    print("Você está demitido!")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("demetido")
    app.geometry("299x247")

    imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
    l_est = Label(app, image=imgd2)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.5)
    exit()

print("O chefe decide testa seu conhecimento na linguagem de Python")
time.sleep(0.3)
print("Como deve ser feito uma entrada de dados?")
time.sleep(0.3)
print("Você usaria print ou input?")
pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("6")
app.geometry("299x247")

imgd6 = PhotoImage(file=pastaapp + "\\6.gif")
l_est = Label(app, image=imgd6)
l_est.place(x=10, y=10)
app.after(5000,lambda:app.destroy())
app.mainloop()
time.sleep(0.5)
exit()
time.sleep(0.3)
resposta4 = input("Qual a sua resposta: ")
if resposta4 == "input":
    print("Parábens, acabou seu expediente, vá para casa e descanse.")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("pbs")
    app.geometry("380x247")

    imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
    l_est = Label(app, image=imgd3)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)
else:
    print("Seu chefe ficou desapontado com a sua resposta, vá para casa que amanhã é um novo dia.")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("chefe")
    app.geometry("241x330")

    imgd7 = PhotoImage(file=pastaapp + "\\chefe.gif")
    l_est = Label(app, image=imgd7)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)

print(x, "acordou atrasado(a)! Pensou em pegar uber, porém está com pouco dinheiro. sim ou não?")
pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("uber")
app.geometry("348x202")

imgd8 = PhotoImage(file=pastaapp + "\\uber.gif")
l_est = Label(app, image=imgd8)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()
time.sleep(0.3)
resposta5 = input("Deseja pegar um uber: ")
if resposta5 == "sim":
    print(x, "conseguiu chegar no horário")
    time.sleep(0.3)
    print("O chefe convidou para almoçar, porém", x, "está sem dinheiro")
    time.sleep(0.3)
    print("Mentir falando que está sem fome ou falar a verdade que está sem dinheiro?")
    time.sleep(0.3)
    resposta6 = input("mentira ou verdade: ")
    if resposta6 == "verdade":
        print("O chefe pagou o almoço")
        pastaapp = os.path.dirname(__file__)
        app = Tk()
        app.title("9")
        app.geometry("329x180")

        imgd9 = PhotoImage(file=pastaapp + "\\9.gif")
        l_est = Label(app, image=imgd9)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.3)

        print(x, "encontrou um problema no qual o programa não estava funcionando, o problema é relacionado a lista")
        time.sleep(0.3)
        print("Seu companheiro de trabalho não sabe qual comando usar para adicionar um item no final da lista")
        pastaapp = os.path.dirname(__file__)
        app = Tk()
        app.title("10")
        app.geometry("350x203")

        imgd10 = PhotoImage(file=pastaapp + "\\10.gif")
        l_est = Label(app, image=imgd10)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.3)
        print("a) clear")
        time.sleep(0.3)
        print("b) index")
        time.sleep(0.3)
        print("c) append")
        time.sleep(0.3)
        resposta7 = input("Qual opção: ")
        if resposta7 == "c":
            print("Parabéns você ajudou um companheiro de trabalho")
            pastaapp = os.path.dirname(__file__)
            app = Tk()
            app.title("pbs")
            app.geometry("380x247")

            imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
            l_est = Label(app, image=imgd3)
            l_est.place(x=10, y=10)
            app.after(5000, lambda: app.destroy())
            app.mainloop()
            time.sleep(0.3)
        else:
            print("O seu companheiro ficou chateado por você mentir")
            time.sleep(0.3)
    else:
        print(x, "está com fome")
        pastaapp = os.path.dirname(__file__)
        app = Tk()
        app.title("11")
        app.geometry("258x203")

        imgd11 = PhotoImage(file=pastaapp + "\\11.gif")
        l_est = Label(app, image=imgd11)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.3)
        print(x, "encontrou um problema no qual o programa não estava funcionando, o problema é relacionado a lista")
        time.sleep(0.3)
        print("Seu companheiro de trabalho não sabe qual comando usar para adicionar um item no final da lista")
        pastaapp = os.path.dirname(__file__)
        app = Tk()
        app.title("10")
        app.geometry("350x203")

        imgd10 = PhotoImage(file=pastaapp + "\\10.gif")
        l_est = Label(app, image=imgd10)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.3)
        print("a) clear")
        time.sleep(0.3)
        print("b) index")
        time.sleep(0.3)
        print("c) append")
        time.sleep(0.3)
        resposta7 = input("Qual opção: ")
        if resposta7 == "c":
            print("Parabéns você ajudou um companheiro de trabalho")
            pastaapp = os.path.dirname(__file__)
            app = Tk()
            app.title("pbs")
            app.geometry("380x247")

            imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
            l_est = Label(app, image=imgd3)
            l_est.place(x=10, y=10)
            app.after(5000, lambda: app.destroy())
            app.mainloop()
            time.sleep(0.3)
        else:
            print("O seu companheiro ficou chateado por você mentir")
            pastaapp = os.path.dirname(__file__)
            app = Tk()
            app.title("12")
            app.geometry("349x233")

            imgd12 = PhotoImage(file=pastaapp + "\\12.gif")
            l_est = Label(app, image=imgd12)
            l_est.place(x=10, y=10)
            app.after(5000, lambda: app.destroy())
            app.mainloop()
            time.sleep(0.3)
            print(x, "está passando mal")
            pastaapp = os.path.dirname(__file__)
            app = Tk()
            app.title("11")
            app.geometry("258x203")

            imgd11 = PhotoImage(file=pastaapp + "\\11.gif")
            l_est = Label(app, image=imgd11)
            l_est.place(x=10, y=10)
            app.after(5000, lambda: app.destroy())
            app.mainloop()
            time.sleep(0.3)
else:
    print("chegou na empresa tarde e após o almoço, pois o pneu do ônibus furou")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("13")
    app.geometry("298x260")

    imgd13 = PhotoImage(file=pastaapp + "\\13.gif")
    l_est = Label(app, image=imgd13)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)
    print("Procure se atentar mais ao horário! Disse o chefe")
    time.sleep(0.3)

print(x ,"como faço para ordenar a lista?")
pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("10")
app.geometry("350x203")

imgd10 = PhotoImage(file=pastaapp + "\\10.gif")
l_est = Label(app, image=imgd10)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()
time.sleep(0.3)
print("a) pop")
time.sleep(0.3)
print("b) sort")
time.sleep(0.3)
print("c) clear")
time.sleep(0.3)
resposta8 = input("Qual alternativa: ")
time.sleep(0.3)
if resposta8 == "b":
    print("Parabéns você ajudou um companheiro")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("pbs")
    app.geometry("380x247")

    imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
    l_est = Label(app, image=imgd3)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)
else:
    print("Seu companheiro ficou triste")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("12")
    app.geometry("349x233")

    imgd12 = PhotoImage(file=pastaapp + "\\12.gif")
    l_est = Label(app, image=imgd12)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()

    time.sleep(0.3)

print(x ,"é chamado para ajudar o chefe em uma lista")
time.sleep(0.3)
print("O chefe não está conseguindo por nada no começo da lista")
pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("10")
app.geometry("350x203")

imgd10 = PhotoImage(file=pastaapp + "\\10.gif")
l_est = Label(app, image=imgd10)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()
time.sleep(0.3)
print("a) append")
time.sleep(0.3)
print("b) insert(0)")
time.sleep(0.3)
print("c) insert(1)")
time.sleep(0.3)
resposta9 = input("Qual alternativa: ")
time.sleep(0.3)
if resposta9 == "b":
    print("Chefe te elogiou")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("pbs")
    app.geometry("380x247")

    imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
    l_est = Label(app, image=imgd3)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)
else:
    print("O chefe perguntou se você entende sobre linguagem python")
    time.sleep(0.3)
    resposta10 = input("sim ou não: ")
    time.sleep(0.3)
    if resposta10 == "sim":
        time.sleep(0.3)
        print(x ,"Como por no começo da lista")
        imgd10 = PhotoImage(file=pastaapp + "\\10.gif")
        l_est = Label(app, image=imgd10)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.3)
        print("a) append")
        time.sleep(0.3)
        print("b) insert(0)")
        time.sleep(0.3)
        print("c) insert(1)")
        time.sleep(0.3)
        resposta11 = input("Qual alternativa: ")
        time.sleep(0.3)
        if resposta11 == "b":
            print("Agora você acertou! Disse o chefe")
            pastaapp = os.path.dirname(__file__)
            app = Tk()
            app.title("pbs")
            app.geometry("380x247")

            imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
            l_est = Label(app, image=imgd3)
            l_est.place(x=10, y=10)
            app.after(5000, lambda: app.destroy())
            app.mainloop()
            time.sleep(0.3)
        else:
            print("Você foi demetido!")
            pastaapp = os.path.dirname(__file__)
            app = Tk()
            app.title("demetido")
            app.geometry("299x247")

            imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
            l_est = Label(app, image=imgd2)
            l_est.place(x=10, y=10)
            app.after(5000, lambda: app.destroy())
            app.mainloop()
            time.sleep(0.5)
            exit()
    else:
        print("Você foi demetido!")
        pastaapp = os.path.dirname(__file__)
        app = Tk()
        app.title("demetido")
        app.geometry("299x247")

        imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
        l_est = Label(app, image=imgd2)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.5)
        exit()
print(f"Acabou o expediente, {x} foi chamado para sair para beber")
pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("14")
app.geometry("349x279")

imgd14 = PhotoImage(file=pastaapp + "\\14.gif")
l_est = Label(app, image=imgd14)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()

time.sleep(0.3)
resposta12 = input("sim ou não: ")
if resposta12 == "sim":
    time.sleep(0.3)
    print(f"{x}, se divertiu!")
    time.sleep(0.3)
else:
    print(f"{x}, foi para casa")
    time.sleep(0.3)

print(f"{x} dormiu")
time.sleep(0.3)
print(f"{x} acordou feliz")

pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("15")
app.geometry("351x317")

imgd15 = PhotoImage(file=pastaapp + "\\15.gif")
l_est = Label(app, image=imgd15)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()

time.sleep(0.3)
print("Está a caminho do trabalho")
time.sleep(0.3)
print(f"{x} chegou no trabalho")
time.sleep(0.3)
print(f"{x} foi chamado para para falar sobre a função def")

pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("16")
app.geometry("393x310")

imgd16 = PhotoImage(file=pastaapp + "\\16.gif")
l_est = Label(app, image=imgd16)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()

time.sleep(0.3)
print("a) Em Python, uma função é definida usando a palavra-chave def, e para "
      "chamar uma função, usamos o nome da função seguido de parênteses:")
time.sleep(0.3)
print("b) Em Python, uma função é definida usando o vetor def, e para "
      "chamar uma função, usamos o nome da função seguido de parênteses:")
time.sleep(0.3)
print("c) Em Python, uma função é definida usando o vetor def, e para "
      "chamar uma função, usamos o nome da função sem parênteses:")
resposta13 = input("Qual será seu discurso: ")
if resposta13 == "a":
    print("Parabéns, você foi aplaudido")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("pbs")
    app.geometry("380x247")

    imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
    l_est = Label(app, image=imgd3)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()

    time.sleep(0.3)
    print("Agora foi solicitado para falar sobre a função lambda")

    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("17")
    app.geometry("348x183")

    imgd17 = PhotoImage(file=pastaapp + "\\17.gif")
    l_est = Label(app, image=imgd17)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()

    time.sleep(0.3)
    print("a) Uma função lambda é uma pequena "
          "função anônima, que pode receber qualquer letra de argumentos, "
          "mas só pode ter uma expressão.")
    time.sleep(0.3)
    print("b) Uma função lambda é uma pequena "
          "função anônima, que pode receber qualquer número de argumentos, "
          "mas só pode ter várias expressão.")
    time.sleep(0.3)
    print("c) Uma função lambda é uma pequena "
          "função anônima, que pode receber qualquer número de argumentos, "
          "mas só pode ter uma expressão.")
    time.sleep(0.3)
    resposta14 = input("Qual é seu discurso: ")
    if resposta14 == "c":
        print(f"{x} foi reconhecido na empresa")
        pastaapp = os.path.dirname(__file__)
        app = Tk()
        app.title("pbs")
        app.geometry("380x247")

        imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
        l_est = Label(app, image=imgd3)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.3)
    else:
        print(f"Infelizmente {x} foi corrigido. Uma função lambda é uma pequena "
          "função anônima, que pode receber qualquer número de argumentos, "
          "mas só pode ter uma expressão")
        time.sleep(0.3)
else:
    print("Infelizmente você foi corrigido. Em Python, uma função é definida usando a palavra-chave def, e para "
      "chamar uma função, usamos o nome da função seguido de parênteses:")
    time.sleep(0.3)
    print("Agora foi solicitado para falar sobre a função lambda")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("17")
    app.geometry("348x183")

    imgd17 = PhotoImage(file=pastaapp + "\\17.gif")
    l_est = Label(app, image=imgd17)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)
    print("a) Uma função lambda é uma pequena "
          "função anônima, que pode receber qualquer letra de argumentos, "
          "mas só pode ter uma expressão.")
    time.sleep(0.3)
    print("b) Uma função lambda é uma pequena "
          "função anônima, que pode receber qualquer número de argumentos, "
          "mas só pode ter várias expressão.")
    time.sleep(0.3)
    print("c) Uma função lambda é uma pequena "
          "função anônima, que pode receber qualquer número de argumentos, "
          "mas só pode ter uma expressão.")
    time.sleep(0.3)
    resposta15 = input("Qual é seu discurso:")
    if resposta15 == "c":
        print("Parabéns, você acertou uma e errou uma")
        pastaapp = os.path.dirname(__file__)
        app = Tk()
        app.title("pbs")
        app.geometry("380x247")

        imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
        l_est = Label(app, image=imgd3)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.3)
    else:
        print(f"O chefe chamou {x} na sala")
        time.sleep(0.3)
        print("Você foi demetido")
        pastaapp = os.path.dirname(__file__)
        app = Tk()
        app.title("demetido")
        app.geometry("299x247")

        imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
        l_est = Label(app, image=imgd2)
        l_est.place(x=10, y=10)
        app.after(5000, lambda: app.destroy())
        app.mainloop()
        time.sleep(0.5)
        exit()
print(f"{x} foi liberado pelo chefe mais cedo")
time.sleep(0.3)
print("Deseja estudar?")

pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("18")
app.geometry("349x265")

imgd18 = PhotoImage(file=pastaapp + "\\18.gif")
l_est = Label(app, image=imgd18)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()

time.sleep(0.3)
resposta16 = input("sim ou não: ")
time.sleep(0.3)
if resposta16 == "sim":
    time.sleep(0.3)
    print("Uma tupla é uma coleção ordenada e imutável. Em Python, as tuplas são "
          "escritas com parênteses.")
    time.sleep(1.0)
    print("Os objetivo: Utilizar tuplas e dicionários para armazenar e manipular dados.")
    time.sleep(1.0)
else:
    print(f"{x} foi jogar video game")

    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("19")
    app.geometry("348x317")

    imgd19 = PhotoImage(file=pastaapp + "\\19.gif")
    l_est = Label(app, image=imgd19)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()

    time.sleep(0.3)
print(f"{x} foi dormi")
time.sleep(0.3)
print (f"{x} acordou bem")
time.sleep(0.3)
print (f"{x} chegou no horário no trabalho")
time.sleep(0.3)
print(f"{x} foi solicitado novamente, para falar, porém o tema é tuplas e dicionários")

pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("20")
app.geometry("349x141")

imgd20 = PhotoImage(file=pastaapp + "\\20.gif")
l_est = Label(app, image=imgd20)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()

time.sleep(0.3)
print("a) As tuplas são variáveis compostas e imutáveis que permitem armazenar "
"vários valores em uma mesma estrutura, acessíveis por chaves individuais")
time.sleep(0.3)
print("b) As tuplas são variáveis compostas e mutáveis que não permitem armazenar "
"vários valores em uma mesma estrutura, acessíveis por chaves individuais")
time.sleep(0.3)
print("c) As tuplas são variáveis compostas e mutáveis que permitem armazenar "
"vários valores em uma mesma estrutura, não acessíveis por chaves individuais")
time.sleep(0.3)
resposta17 = input("Qual a sua alternativa: ")
if resposta17 == "a":
   print("Parabéns")
   pastaapp = os.path.dirname(__file__)
   app = Tk()
   app.title("pbs")
   app.geometry("380x247")

   imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
   l_est = Label(app, image=imgd3)
   l_est.place(x=10, y=10)
   app.after(5000, lambda: app.destroy())
   app.mainloop()
   time.sleep(0.3)
   print(f" Agora deve fala sobre dicionários")
   pastaapp = os.path.dirname(__file__)
   app = Tk()
   app.title("20")
   app.geometry("349x141")

   imgd20 = PhotoImage(file=pastaapp + "\\20.gif")
   l_est = Label(app, image=imgd20)
   l_est.place(x=10, y=10)
   app.after(5000, lambda: app.destroy())
   app.mainloop()
   time.sleep(0.3)
   print("a) Os dicionários são invariáveis compostas que permitem armazenar vários "
   "valores em uma mesma estrutura, acessíveis por chaves literais.")
   time.sleep(0.3)
   print("b) Os dicionários são variáveis compostas que permitem armazenar vários "
   "valores em uma mesma estrutura, acessíveis por chaves literais.")
   time.sleep(0.3)
   print("c) Os dicionários são variáveis simples que permitem armazenar vários "
   "valores em uma mesma estrutura, acessíveis por chaves literais.")
   time.sleep(0.3)
   resposta18 = input("Qual a alternativa: ")
   if resposta18 == "b":
      print("Parabéns")
      pastaapp = os.path.dirname(__file__)
      app = Tk()
      app.title("pbs")
      app.geometry("380x247")

      imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
      l_est = Label(app, image=imgd3)
      l_est.place(x=10, y=10)
      app.after(5000, lambda: app.destroy())
      app.mainloop()
      time.sleep(0.3)
      print(f" Fizeram uma pergunta para {x}. O quais são os objetivos das duas?")
      pastaapp = os.path.dirname(__file__)
      app = Tk()
      app.title("20")
      app.geometry("349x141")

      imgd20 = PhotoImage(file=pastaapp + "\\20.gif")
      l_est = Label(app, image=imgd20)
      l_est.place(x=10, y=10)
      app.after(5000, lambda: app.destroy())
      app.mainloop()
      print("a) Utilizar tuplas e dicionários para armazenar e manipular dados.")
      time.sleep(0.3)
      print("b) Utilizar tuplas e dicionários para armazenar dados.")
      time.sleep(0.3)
      print("c) Utilizar tuplas e dicionários para manipular dados.")
      time.sleep(0.3)
      resposta19 = input("Qual a sua alternativa: ")
      if resposta19 == "a":
         print(f"Todos elogiaram {x}")
         pastaapp = os.path.dirname(__file__)
         app = Tk()
         app.title("pbs")
         app.geometry("380x247")

         imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
         l_est = Label(app, image=imgd3)
         l_est.place(x=10, y=10)
         app.after(5000, lambda: app.destroy())
         app.mainloop()
         time.sleep(0.3)
      else:
         print(f"{x} foi corrigido. Utilizar tuplas e dicionários para armazenar e manipular dados.")
         time.sleep(0.3)
   else:
         print(f"{x} foi corrigido. Os dicionários são variáveis compostas que permitem armazenar vários "
         "valores em uma mesma estrutura, acessíveis por chaves literais.")
   time.sleep(0.3)
else:
   print(f"{x} foi corrigido. As tuplas são variáveis compostas e imutáveis que permitem armazenar "
   "vários valores em uma mesma estrutura, acessíveis por chaves individuais")
   time.sleep(0.3)
   print(f" Agora deve fala sobre dicionários")
   pastaapp = os.path.dirname(__file__)
   app = Tk()
   app.title("20")
   app.geometry("349x141")

   imgd20 = PhotoImage(file=pastaapp + "\\20.gif")
   l_est = Label(app, image=imgd20)
   l_est.place(x=10, y=10)
   app.after(5000, lambda: app.destroy())
   app.mainloop()
   time.sleep(0.3)
   print("a) Os dicionários são invariáveis compostas que permitem armazenar vários "
   "valores em uma mesma estrutura, acessíveis por chaves literais.")
   time.sleep(0.3)
   print("b) Os dicionários são variáveis compostas que permitem armazenar vários "
   "valores em uma mesma estrutura, acessíveis por chaves literais.")
   time.sleep(0.3)
   print("c) Os dicionários são variáveis simples que permitem armazenar vários "
   "valores em uma mesma estrutura, acessíveis por chaves literais.")
   time.sleep(0.3)
   resposta18 = input("Qual a alternativa: ")
   if resposta18 == "b":
      print("Parabéns")
      pastaapp = os.path.dirname(__file__)
      app = Tk()
      app.title("pbs")
      app.geometry("380x247")

      imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
      l_est = Label(app, image=imgd3)
      l_est.place(x=10, y=10)
      app.after(5000, lambda: app.destroy())
      app.mainloop()
      time.sleep(0.3)
      print(f" Fizeram uma pergunta para {x}. O quais são os objetivos das duas?")
      pastaapp = os.path.dirname(__file__)
      app = Tk()
      app.title("20")
      app.geometry("349x141")

      imgd20 = PhotoImage(file=pastaapp + "\\20.gif")
      l_est = Label(app, image=imgd20)
      l_est.place(x=10, y=10)
      app.after(5000, lambda: app.destroy())
      app.mainloop()
      print("a) Utilizar tuplas e dicionários para armazenar e manipular dados.")
      time.sleep(0.3)
      print("b) Utilizar tuplas e dicionários para armazenar dados.")
      time.sleep(0.3)
      print("c) Utilizar tuplas e dicionários para manipular dados.")
      time.sleep(0.3)
      resposta19 = input("Qual a sua alternativa: ")
      if resposta19 == "a":
         print(f"Todos elogiaram {x}")
         pastaapp = os.path.dirname(__file__)
         app = Tk()
         app.title("pbs")
         app.geometry("380x247")

         imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
         l_est = Label(app, image=imgd3)
         l_est.place(x=10, y=10)
         app.after(5000, lambda: app.destroy())
         app.mainloop()
         time.sleep(0.3)
      else:
         print(f"{x} foi corrigido. Utilizar tuplas e dicionários para armazenar e manipular dados.")
         time.sleep(0.3)
         print(f"{x} foi chamado na sala do chefe. {x} foi demetido!")
         pastaapp = os.path.dirname(__file__)
         app = Tk()
         app.title("demetido")
         app.geometry("299x247")

         imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
         l_est = Label(app, image=imgd2)
         l_est.place(x=10, y=10)
         app.after(5000, lambda: app.destroy())
         app.mainloop()
         time.sleep(0.5)
         exit()
   else:
       print(f"{x} foi corrigido. Os dicionários são variáveis compostas que permitem armazenar vários "
   "valores em uma mesma estrutura, acessíveis por chaves literais.")
       print(f" Fizeram uma pergunta para {x}. O quais são os objetivos das duas?")
       pastaapp = os.path.dirname(__file__)
       app = Tk()
       app.title("20")
       app.geometry("349x141")

       imgd20 = PhotoImage(file=pastaapp + "\\20.gif")
       l_est = Label(app, image=imgd20)
       l_est.place(x=10, y=10)
       app.after(5000, lambda: app.destroy())
       app.mainloop()
       print("a) Utilizar tuplas e dicionários para armazenar e manipular dados.")
       time.sleep(0.3)
       print("b) Utilizar tuplas e dicionários para armazenar dados.")
       time.sleep(0.3)
       print("c) Utilizar tuplas e dicionários para manipular dados.")
       time.sleep(0.3)
       resposta19 = input("Qual a sua alternativa: ")
       if resposta19 == "a":
           print(f"Elogiaram {x}")
           pastaapp = os.path.dirname(__file__)
           app = Tk()
           app.title("pbs")
           app.geometry("380x247")

           imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
           l_est = Label(app, image=imgd3)
           l_est.place(x=10, y=10)
           app.after(5000, lambda: app.destroy())
           app.mainloop()
           time.sleep(0.3)
       else:
           print(f"{x} foi corrigido. Utilizar tuplas e dicionários para armazenar e manipular dados.")
           time.sleep(0.3)
           print(f"{x} foi chamado na sala do chefe. {x} foi demetido!")
           pastaapp = os.path.dirname(__file__)
           app = Tk()
           app.title("demetido")
           app.geometry("299x247")

           imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
           l_est = Label(app, image=imgd2)
           l_est.place(x=10, y=10)
           app.after(5000, lambda: app.destroy())
           app.mainloop()
           time.sleep(0.5)
           exit()
   time.sleep(0.3)
print(f"{x} fez um ótimo trabalho, chefe pediu para falar sobre outro assunto")
time.sleep(0.3)
print("Chefe pediu para falar de módulo")
time.sleep(0.3)
print("O chefe perguntou: Quando utilizar módulo?")
pastaapp = os.path.dirname(__file__)
app = Tk()
app.title("21")
app.geometry("349x173")

imgd21 = PhotoImage(file=pastaapp + "\\21.gif")
l_est = Label(app, image=imgd21)
l_est.place(x=10, y=10)
app.after(5000, lambda: app.destroy())
app.mainloop()
time.sleep(0.3)
print("a) Utilizar módulos para construir arquivos para persistência de dados.")
time.sleep(0.3)
print("b) Utilizar módulos para resolução de problemas e construir arquivos para persistência de dados e adotar vetores novos.")
time.sleep(0.3)
print("c) Utilizar módulos para resolução de problemas e construir arquivos para persistência de dados.")
time.sleep(0.3)
resposta20 = input("Qual alternativa: ")
time.sleep(0.3)
if resposta20 == "c":
   print("O Chefe está gostando do seu desempenho")
   pastaapp = os.path.dirname(__file__)
   app = Tk()
   app.title("pbs")
   app.geometry("380x247")

   imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
   l_est = Label(app, image=imgd3)
   l_est.place(x=10, y=10)
   app.after(5000, lambda: app.destroy())
   app.mainloop()
   time.sleep(0.3)
   print(f"{x} pensa em tomar uma iniciativa de falar mais sobre o assunto")
   pastaapp = os.path.dirname(__file__)
   app = Tk()
   app.title("21")
   app.geometry("349x173")

   imgd21 = PhotoImage(file=pastaapp + "\\21.gif")
   l_est = Label(app, image=imgd21)
   l_est.place(x=10, y=10)
   app.after(5000, lambda: app.destroy())
   app.mainloop()
   time.sleep(0.3)
   resposta21 = input("sim ou não: ")
   if resposta21 == "sim":
       print("a) A linguagem Python possui bibliotecas de funções, conhecidas como "
             "módulos, que podem ser utilizadas para auxiliar na resolução de vários"
             "problemas que envolvam, por exemplo, cálculos matemáticos ou acesso"
             "a arquivos do tipo texto.")
       time.sleep(0.3)
       print("a) A linguagem Python possui bibliotecas de funções, conhecidas como "
             "módulos, que podem ser utilizadas para auxiliar na resolução de vários"
             "problemas que envolvam, por exemplo, cálculos matemáticos ou acesso"
             "a arquivos do tipo texto.")
       time.sleep(0.3)
       print("c) A linguagem Python possui bibliotecas de funções, conhecidas como "
             "módulos, que podem ser utilizadas para auxiliar na resolução de vários"
             "problemas que envolvam, por exemplo, cálculos matemáticos ou acesso"
             "a arquivos do tipo texto.")
       time.sleep(0.3)
       resposta22 = input("Qual alternativa: ")
       time.sleep(0.3)
       if resposta22 == "c":
           print("Bela iniciativa! O chefe gostou")
           pastaapp = os.path.dirname(__file__)
           app = Tk()
           app.title("pbs")
           app.geometry("380x247")

           imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
           l_est = Label(app, image=imgd3)
           l_est.place(x=10, y=10)
           app.after(5000, lambda: app.destroy())
           app.mainloop()
           time.sleep(0.3)
           print(f"Amanha desejo conversar contigo {x}. Disse o chefe")
           time.sleep(0.3)
       else:
           print("Boa iniciativa, pena que errou. A linguagem Python possui bibliotecas de funções, conhecidas como "
                 "módulos, que podem ser utilizadas para auxiliar na resolução de vários"
                 "problemas que envolvam, por exemplo, cálculos matemáticos ou acesso"
                 "a arquivos do tipo texto.")
           time.sleep(0.3)
else:
   print(f"{x} pensa em tomar uma iniciativa de falar mais sobre o assunto")
   pastaapp = os.path.dirname(__file__)
   app = Tk()
   app.title("21")
   app.geometry("349x173")

   imgd21 = PhotoImage(file=pastaapp + "\\21.gif")
   l_est = Label(app, image=imgd21)
   l_est.place(x=10, y=10)
   app.after(5000, lambda: app.destroy())
   app.mainloop()
   time.sleep(0.3)
   resposta21 = input("sim ou não: ")
   if resposta21 == "sim":
       print("a) A linguagem Python possui bibliotecas de funções, conhecidas como "
             "módulos, que podem ser utilizadas para auxiliar na resolução de vários"
             "problemas que envolvam, por exemplo, cálculos matemáticos ou acesso"
             "a arquivos do tipo texto.")
       time.sleep(0.3)
       print("a) A linguagem Python possui bibliotecas de funções, conhecidas como "
             "módulos, que podem ser utilizadas para auxiliar na resolução de vários"
             "problemas que envolvam, por exemplo, cálculos matemáticos ou acesso"
             "a arquivos do tipo texto.")
       time.sleep(0.3)
       print("c) A linguagem Python possui bibliotecas de funções, conhecidas como "
             "módulos, que podem ser utilizadas para auxiliar na resolução de vários"
             "problemas que envolvam, por exemplo, cálculos matemáticos ou acesso"
             "a arquivos do tipo texto.")
       time.sleep(0.3)
       resposta23 = input("Qual alternativa: ")
       time.sleep(0.3)
       if resposta23 == "c":
           print("Bela iniciativa! O chefe gostou")
           pastaapp = os.path.dirname(__file__)
           app = Tk()
           app.title("pbs")
           app.geometry("380x247")

           imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
           l_est = Label(app, image=imgd3)
           l_est.place(x=10, y=10)
           app.after(5000, lambda: app.destroy())
           app.mainloop()
           time.sleep(0.3)
           print(f"Amanha desejo conversar contigo {x}. Disse o chefe")
           time.sleep(0.3)
       else:
           print("Boa iniciativa, pena que errou. A linguagem Python possui bibliotecas de funções, conhecidas como "
                 "módulos, que podem ser utilizadas para auxiliar na resolução de vários"
                 "problemas que envolvam, por exemplo, cálculos matemáticos ou acesso"
                 "a arquivos do tipo texto.")
           time.sleep(0.3)
           print(f"O chefe demetiu {x}")
           print(f" Fizeram uma pergunta para {x}. O quais são os objetivos das duas?")
           pastaapp = os.path.dirname(__file__)
           app = Tk()
           app.title("20")
           app.geometry("349x141")

           imgd20 = PhotoImage(file=pastaapp + "\\20.gif")
           l_est = Label(app, image=imgd20)
           l_est.place(x=10, y=10)
           app.after(5000, lambda: app.destroy())
           app.mainloop()
           print("a) Utilizar tuplas e dicionários para armazenar e manipular dados.")
           time.sleep(0.3)
           print("b) Utilizar tuplas e dicionários para armazenar dados.")
           time.sleep(0.3)
           print("c) Utilizar tuplas e dicionários para manipular dados.")
           time.sleep(0.3)
           resposta19 = input("Qual a sua alternativa: ")
           if resposta19 == "a":
               print(f"Todos elogiaram {x}")
               pastaapp = os.path.dirname(__file__)
               app = Tk()
               app.title("pbs")
               app.geometry("380x247")

               imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
               l_est = Label(app, image=imgd3)
               l_est.place(x=10, y=10)
               app.after(5000, lambda: app.destroy())
               app.mainloop()
               time.sleep(0.3)
           else:
               print(f"{x} foi corrigido. Utilizar tuplas e dicionários para armazenar e manipular dados.")
               time.sleep(0.3)
               print(f"{x} foi chamado na sala do chefe. {x} foi demetido!")
               pastaapp = os.path.dirname(__file__)
               app = Tk()
               app.title("demetido")
               app.geometry("299x247")

               imgd2 = PhotoImage(file=pastaapp + "\\demetido.gif")
               l_est = Label(app, image=imgd2)
               l_est.place(x=10, y=10)
               app.after(5000, lambda: app.destroy())
               app.mainloop()
               time.sleep(0.5)
           time.sleep(0.3)
           exit()
print(f"{x} foi para casa")
time.sleep(0.3)
print(f"{x} está nervoso para amanhã")
time.sleep(0.3)
print(f"{x} foi dormi...")
time.sleep(2.0)
print(f"{x} acordou cedo e acordou confiante!")
time.sleep(0.3)
print(f"{x} foi direto para sala do chefe")
time.sleep(0.3)
print(f"{x} deseja trabalhar conosco?")
time.sleep(0.3)
resposta24 = input("sim ou não: ")
if resposta24 == "sim":
    print("Seja bem vindo a empresa, parabéns agora não é mais um estágiario")
    pastaapp = os.path.dirname(__file__)
    app = Tk()
    app.title("pbs")
    app.geometry("380x247")

    imgd3 = PhotoImage(file=pastaapp + "\\pbs.gif")
    l_est = Label(app, image=imgd3)
    l_est.place(x=10, y=10)
    app.after(5000, lambda: app.destroy())
    app.mainloop()
    time.sleep(0.3)
    print("Obrigado por jogar meu jogo!")
    time.sleep(0.3)
    print("Volte quando quiser")
    exit()
else:
    print(f"{x} foi muito bom tê-lo até aqui!")
    time.sleep(0.3)
    print("Obrigado por jogar meu jogo!")
    time.sleep(0.3)
    print("Volte quando quiser")
    exit()